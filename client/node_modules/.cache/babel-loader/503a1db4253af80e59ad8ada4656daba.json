{"ast":null,"code":"import { DashboardData, postUploadImage, getSliderImages, postDeleteImage } from \"./FetchApi\";\nimport { getAllOrder } from \"../orders/FetchApi.js\";\nexport const GetAllData = async dispatch => {\n  let responseData = await DashboardData();\n\n  if (responseData) {\n    dispatch({\n      type: \"totalData\",\n      payload: responseData\n    });\n  }\n};\nexport const todayAllOrders = async dispatch => {\n  let responseData = await getAllOrder();\n\n  if (responseData) {\n    dispatch({\n      type: \"totalOrders\",\n      payload: responseData\n    });\n  }\n};\nexport const sliderImages = async dispatch => {\n  try {\n    let responseData = await getSliderImages();\n\n    if (responseData && responseData.Images) {\n      dispatch({\n        type: \"sliderImages\",\n        payload: responseData.Images\n      });\n    }\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const deleteImage = async (id, dispatch) => {\n  dispatch({\n    type: \"imageUpload\",\n    payload: true\n  });\n\n  try {\n    let responseData = await postDeleteImage(id);\n\n    if (responseData && responseData.success) {\n      setTimeout(function () {\n        sliderImages(dispatch);\n        dispatch({\n          type: \"imageUpload\",\n          payload: false\n        });\n      }, 1000);\n    }\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const uploadImage = async (image, dispatch) => {\n  dispatch({\n    type: \"imageUpload\",\n    payload: true\n  });\n  let formData = new FormData();\n  formData.append(\"image\", image);\n  console.log(formData.get(\"image\"));\n\n  try {\n    let responseData = await postUploadImage(formData);\n\n    if (responseData && responseData.success) {\n      setTimeout(function () {\n        dispatch({\n          type: \"imageUpload\",\n          payload: false\n        });\n        sliderImages(dispatch);\n      }, 1000);\n    }\n  } catch (error) {\n    console.log(error);\n  }\n};","map":{"version":3,"sources":["D:/308 Project/SpecialRecipes - Kopya/client/src/components/admin/dashboardAdmin/Action.js"],"names":["DashboardData","postUploadImage","getSliderImages","postDeleteImage","getAllOrder","GetAllData","dispatch","responseData","type","payload","todayAllOrders","sliderImages","Images","error","console","log","deleteImage","id","success","setTimeout","uploadImage","image","formData","FormData","append","get"],"mappings":"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","sourcesContent":["import {\n  DashboardData,\n  postUploadImage,\n  getSliderImages,\n  postDeleteImage,\n} from \"./FetchApi\";\nimport { getAllOrder } from \"../orders/FetchApi.js\";\n\nexport const GetAllData = async (dispatch) => {\n  let responseData = await DashboardData();\n  if (responseData) {\n    dispatch({ type: \"totalData\", payload: responseData });\n  }\n};\n\nexport const todayAllOrders = async (dispatch) => {\n  let responseData = await getAllOrder();\n  if (responseData) {\n    dispatch({ type: \"totalOrders\", payload: responseData });\n  }\n};\n\nexport const sliderImages = async (dispatch) => {\n  try {\n    let responseData = await getSliderImages();\n    if (responseData && responseData.Images) {\n      dispatch({ type: \"sliderImages\", payload: responseData.Images });\n    }\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const deleteImage = async (id, dispatch) => {\n  dispatch({ type: \"imageUpload\", payload: true });\n  try {\n    let responseData = await postDeleteImage(id);\n    if (responseData && responseData.success) {\n      setTimeout(function () {\n        sliderImages(dispatch);\n        dispatch({ type: \"imageUpload\", payload: false });\n      }, 1000);\n    }\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const uploadImage = async (image, dispatch) => {\n  dispatch({ type: \"imageUpload\", payload: true });\n  let formData = new FormData();\n  formData.append(\"image\", image);\n  console.log(formData.get(\"image\"));\n  try {\n    let responseData = await postUploadImage(formData);\n    if (responseData && responseData.success) {\n      setTimeout(function () {\n        dispatch({ type: \"imageUpload\", payload: false });\n        sliderImages(dispatch);\n      }, 1000);\n    }\n  } catch (error) {\n    console.log(error);\n  }\n};\n"]},"metadata":{},"sourceType":"module"}