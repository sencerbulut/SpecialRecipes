{"ast":null,"code":"import { getUserById, updatePersonalInformationFetch, getOrderByUser, updatePassword } from \"./FetchApi\";\nexport const logout = () => {\n  localStorage.removeItem(\"jwt\");\n  localStorage.removeItem(\"cart\");\n  localStorage.removeItem(\"wishList\");\n  window.location.href = \"/\";\n};\nexport const fetchData = async dispatch => {\n  dispatch({\n    type: \"loading\",\n    payload: true\n  });\n  let userId = JSON.parse(localStorage.getItem(\"jwt\")) ? JSON.parse(localStorage.getItem(\"jwt\")).user._id : \"\";\n\n  try {\n    let responseData = await getUserById(userId);\n    setTimeout(() => {\n      if (responseData && responseData.User) {\n        dispatch({\n          type: \"userDetails\",\n          payload: responseData.User\n        });\n        dispatch({\n          type: \"loading\",\n          payload: false\n        });\n      }\n    }, 500);\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const fetchOrderByUser = async dispatch => {\n  dispatch({\n    type: \"loading\",\n    payload: true\n  });\n  let userId = JSON.parse(localStorage.getItem(\"jwt\")) ? JSON.parse(localStorage.getItem(\"jwt\")).user._id : \"\";\n\n  try {\n    let responseData = await getOrderByUser(userId);\n    setTimeout(() => {\n      if (responseData && responseData.Order) {\n        console.log(responseData);\n        dispatch({\n          type: \"OrderByUser\",\n          payload: responseData.Order\n        });\n        dispatch({\n          type: \"loading\",\n          payload: false\n        });\n      }\n    }, 500);\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const updatePersonalInformationAction = async (dispatch, fData) => {\n  const formData = {\n    uId: fData.id,\n    name: fData.name,\n    phoneNumber: fData.phone\n  };\n  dispatch({\n    type: \"loading\",\n    payload: true\n  });\n\n  try {\n    let responseData = await updatePersonalInformationFetch(formData);\n    setTimeout(() => {\n      if (responseData && responseData.success) {\n        dispatch({\n          type: \"loading\",\n          payload: false\n        });\n        fetchData(dispatch);\n      }\n    }, 500);\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const handleChangePassword = async (fData, setFdata, dispatch) => {\n  if (!fData.newPassword || !fData.oldPassword || !fData.confirmPassword) {\n    setFdata({ ...fData,\n      error: \"Please provide your all password and a new password\"\n    });\n  } else if (fData.newPassword !== fData.confirmPassword) {\n    setFdata({ ...fData,\n      error: \"Password does't match\"\n    });\n  } else {\n    const formData = {\n      uId: JSON.parse(localStorage.getItem(\"jwt\")).user._id,\n      oldPassword: fData.oldPassword,\n      newPassword: fData.newPassword\n    };\n    dispatch({\n      type: \"loading\",\n      payload: true\n    });\n\n    try {\n      let responseData = await updatePassword(formData);\n\n      if (responseData && responseData.success) {\n        setFdata({ ...fData,\n          success: responseData.success,\n          error: \"\",\n          oldPassword: \"\",\n          newPassword: \"\",\n          confirmPassword: \"\"\n        });\n        dispatch({\n          type: \"loading\",\n          payload: false\n        });\n      } else if (responseData.error) {\n        dispatch({\n          type: \"loading\",\n          payload: false\n        });\n        setFdata({ ...fData,\n          error: responseData.error,\n          success: \"\",\n          oldPassword: \"\",\n          newPassword: \"\",\n          confirmPassword: \"\"\n        });\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  }\n};","map":{"version":3,"sources":["D:/308/SpecialRecipes/client/src/components/shop/dashboardUser/Action.js"],"names":["getUserById","updatePersonalInformationFetch","getOrderByUser","updatePassword","logout","localStorage","removeItem","window","location","href","fetchData","dispatch","type","payload","userId","JSON","parse","getItem","user","_id","responseData","setTimeout","User","error","console","log","fetchOrderByUser","Order","updatePersonalInformationAction","fData","formData","uId","id","name","phoneNumber","phone","success","handleChangePassword","setFdata","newPassword","oldPassword","confirmPassword"],"mappings":"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","sourcesContent":["import {\n  getUserById,\n  updatePersonalInformationFetch,\n  getOrderByUser,\n  updatePassword,\n} from \"./FetchApi\";\n\nexport const logout = () => {\n  localStorage.removeItem(\"jwt\");\n  localStorage.removeItem(\"cart\");\n  localStorage.removeItem(\"wishList\");\n  window.location.href = \"/\";\n};\n\nexport const fetchData = async (dispatch) => {\n  dispatch({ type: \"loading\", payload: true });\n  let userId = JSON.parse(localStorage.getItem(\"jwt\"))\n    ? JSON.parse(localStorage.getItem(\"jwt\")).user._id\n    : \"\";\n  try {\n    let responseData = await getUserById(userId);\n    setTimeout(() => {\n      if (responseData && responseData.User) {\n        dispatch({ type: \"userDetails\", payload: responseData.User });\n        dispatch({ type: \"loading\", payload: false });\n      }\n    }, 500);\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const fetchOrderByUser = async (dispatch) => {\n  dispatch({ type: \"loading\", payload: true });\n  let userId = JSON.parse(localStorage.getItem(\"jwt\"))\n    ? JSON.parse(localStorage.getItem(\"jwt\")).user._id\n    : \"\";\n  try {\n    let responseData = await getOrderByUser(userId);\n    setTimeout(() => {\n      if (responseData && responseData.Order) {\n        console.log(responseData);\n        dispatch({ type: \"OrderByUser\", payload: responseData.Order });\n        dispatch({ type: \"loading\", payload: false });\n      }\n    }, 500);\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const updatePersonalInformationAction = async (dispatch, fData) => {\n  const formData = {\n    uId: fData.id,\n    name: fData.name,\n    phoneNumber: fData.phone,\n  };\n  dispatch({ type: \"loading\", payload: true });\n  try {\n    let responseData = await updatePersonalInformationFetch(formData);\n    setTimeout(() => {\n      if (responseData && responseData.success) {\n        dispatch({ type: \"loading\", payload: false });\n        fetchData(dispatch);\n      }\n    }, 500);\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const handleChangePassword = async (fData, setFdata, dispatch) => {\n  if (!fData.newPassword || !fData.oldPassword || !fData.confirmPassword) {\n    setFdata({\n      ...fData,\n      error: \"Please provide your all password and a new password\",\n    });\n  } else if (fData.newPassword !== fData.confirmPassword) {\n    setFdata({ ...fData, error: \"Password does't match\" });\n  } else {\n    const formData = {\n      uId: JSON.parse(localStorage.getItem(\"jwt\")).user._id,\n      oldPassword: fData.oldPassword,\n      newPassword: fData.newPassword,\n    };\n    dispatch({ type: \"loading\", payload: true });\n    try {\n      let responseData = await updatePassword(formData);\n      if (responseData && responseData.success) {\n        setFdata({\n          ...fData,\n          success: responseData.success,\n          error: \"\",\n          oldPassword: \"\",\n          newPassword: \"\",\n          confirmPassword: \"\",\n        });\n        dispatch({ type: \"loading\", payload: false });\n      } else if (responseData.error) {\n        dispatch({ type: \"loading\", payload: false });\n        setFdata({\n          ...fData,\n          error: responseData.error,\n          success: \"\",\n          oldPassword: \"\",\n          newPassword: \"\",\n          confirmPassword: \"\",\n        });\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  }\n};\n"]},"metadata":{},"sourceType":"module"}