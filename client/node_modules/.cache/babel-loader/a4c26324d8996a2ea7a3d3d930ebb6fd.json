{"ast":null,"code":"export const subTotal = (id, price) => {\n  let subTotalCost = 0;\n  let carts = JSON.parse(localStorage.getItem(\"cart\"));\n  carts.filter(item => {\n    if (item.id === id) {\n      subTotalCost = item.quantitiy * price;\n    }\n  });\n  return subTotalCost;\n};\nexport const quantity = id => {\n  let product = 0;\n  let carts = JSON.parse(localStorage.getItem(\"cart\"));\n  carts.filter(item => {\n    if (item.id === id) {\n      product = item.quantitiy;\n    }\n  });\n  return product;\n};\nexport const totalCost = () => {\n  let totalCost = 0;\n  let carts = JSON.parse(localStorage.getItem(\"cart\"));\n  carts.map(item => {\n    totalCost += item.quantitiy * item.price;\n  });\n  return totalCost;\n};","map":{"version":3,"sources":["D:/308 Project/SpecialRecipes - Kopya/client/src/components/shop/partials/Mixins.js"],"names":["subTotal","id","price","subTotalCost","carts","JSON","parse","localStorage","getItem","filter","item","quantitiy","quantity","product","totalCost","map"],"mappings":"AAAA,OAAO,MAAMA,QAAQ,GAAG,CAACC,EAAD,EAAKC,KAAL,KAAe;AACrC,MAAIC,YAAY,GAAG,CAAnB;AACA,MAAIC,KAAK,GAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAX,CAAZ;AACAJ,EAAAA,KAAK,CAACK,MAAN,CAAcC,IAAD,IAAU;AACrB,QAAIA,IAAI,CAACT,EAAL,KAAYA,EAAhB,EAAoB;AAClBE,MAAAA,YAAY,GAAGO,IAAI,CAACC,SAAL,GAAiBT,KAAhC;AACD;AACF,GAJD;AAKA,SAAOC,YAAP;AACD,CATM;AAWP,OAAO,MAAMS,QAAQ,GAAIX,EAAD,IAAQ;AAC9B,MAAIY,OAAO,GAAG,CAAd;AACA,MAAIT,KAAK,GAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAX,CAAZ;AACAJ,EAAAA,KAAK,CAACK,MAAN,CAAcC,IAAD,IAAU;AACrB,QAAIA,IAAI,CAACT,EAAL,KAAYA,EAAhB,EAAoB;AAClBY,MAAAA,OAAO,GAAGH,IAAI,CAACC,SAAf;AACD;AACF,GAJD;AAKA,SAAOE,OAAP;AACD,CATM;AAWP,OAAO,MAAMC,SAAS,GAAG,MAAM;AAC7B,MAAIA,SAAS,GAAG,CAAhB;AACA,MAAIV,KAAK,GAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAX,CAAZ;AACAJ,EAAAA,KAAK,CAACW,GAAN,CAAWL,IAAD,IAAU;AAClBI,IAAAA,SAAS,IAAIJ,IAAI,CAACC,SAAL,GAAiBD,IAAI,CAACR,KAAnC;AACD,GAFD;AAGA,SAAOY,SAAP;AACD,CAPM","sourcesContent":["export const subTotal = (id, price) => {\n  let subTotalCost = 0;\n  let carts = JSON.parse(localStorage.getItem(\"cart\"));\n  carts.filter((item) => {\n    if (item.id === id) {\n      subTotalCost = item.quantitiy * price;\n    }\n  });\n  return subTotalCost;\n};\n\nexport const quantity = (id) => {\n  let product = 0;\n  let carts = JSON.parse(localStorage.getItem(\"cart\"));\n  carts.filter((item) => {\n    if (item.id === id) {\n      product = item.quantitiy;\n    }\n  });\n  return product;\n};\n\nexport const totalCost = () => {\n  let totalCost = 0;\n  let carts = JSON.parse(localStorage.getItem(\"cart\"));\n  carts.map((item) => {\n    totalCost += item.quantitiy * item.price;\n  });\n  return totalCost;\n};\n"]},"metadata":{},"sourceType":"module"}