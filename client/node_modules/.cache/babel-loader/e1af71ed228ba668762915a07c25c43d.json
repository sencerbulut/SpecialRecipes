{"ast":null,"code":"export const cartList = () => {\n  let carts = localStorage.getItem(\"cart\") ? JSON.parse(localStorage.getItem(\"cart\")) : null;\n  let list = [];\n\n  if (carts !== null) {\n    for (let cart of carts) {\n      list.push(cart.id);\n    }\n\n    return list;\n  } else {\n    return list = null;\n  }\n};\nexport const updateQuantity = (type, totalQuantitiy, quantitiy, setQuantitiy, setAlertq) => {\n  if (type === \"increase\") {\n    if (quantitiy === totalQuantitiy) {\n      setAlertq(true);\n    } else {\n      setQuantitiy(quantitiy + 1);\n    }\n  } else if (type === \"decrease\") {\n    if (quantitiy === 1) {\n      setQuantitiy(1);\n      setAlertq(false);\n    } else {\n      setQuantitiy(quantitiy - 1);\n    }\n  }\n};\nexport const slideImage = (type, active, count, setCount, pImages) => {\n  if (active === count) {\n    return true;\n  }\n\n  if (type === \"increase\") {\n    if (count === pImages.length - 1) {\n      setCount(0);\n    } else if (count < pImages.length) {\n      setCount(count + 1);\n    }\n  }\n};\nexport const inCart = id => {\n  if (localStorage.getItem(\"cart\")) {\n    let cartProducts = JSON.parse(localStorage.getItem(\"cart\"));\n\n    for (let product of cartProducts) {\n      if (product.id === id) {\n        return true;\n      }\n    }\n  }\n\n  return false;\n};\nexport const addToCart = (id, quantitiy, price, layoutDispatch, setQuantitiy, setAlertq, fetchData, totalCost) => {\n  let isObj = false;\n  let cart = localStorage.getItem(\"cart\") ? JSON.parse(localStorage.getItem(\"cart\")) : [];\n\n  if (cart.length > 0) {\n    cart.forEach(item => {\n      if (item.id === id) {\n        isObj = true;\n      }\n    });\n\n    if (!isObj) {\n      cart.push({\n        id,\n        quantitiy,\n        price\n      });\n      localStorage.setItem(\"cart\", JSON.stringify(cart));\n    }\n  } else {\n    cart.push({\n      id,\n      quantitiy,\n      price\n    });\n    localStorage.setItem(\"cart\", JSON.stringify(cart));\n  }\n\n  layoutDispatch({\n    type: \"inCart\",\n    payload: cartList()\n  });\n  layoutDispatch({\n    type: \"cartTotalCost\",\n    payload: totalCost()\n  });\n  setQuantitiy(1);\n  setAlertq(false);\n  fetchData();\n};","map":{"version":3,"sources":["C:/Users/cagat/Desktop/SpecialRecipes/client/src/components/shop/productDetails/Mixins.js"],"names":["cartList","carts","localStorage","getItem","JSON","parse","list","cart","push","id","updateQuantity","type","totalQuantitiy","quantitiy","setQuantitiy","setAlertq","slideImage","active","count","setCount","pImages","length","inCart","cartProducts","product","addToCart","price","layoutDispatch","fetchData","totalCost","isObj","forEach","item","setItem","stringify","payload"],"mappings":"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","sourcesContent":["export const cartList = () => {\n  let carts = localStorage.getItem(\"cart\")\n    ? JSON.parse(localStorage.getItem(\"cart\"))\n    : null;\n  let list = [];\n  if (carts !== null) {\n    for (let cart of carts) {\n      list.push(cart.id);\n    }\n    return list;\n  } else {\n    return (list = null);\n  }\n};\n\nexport const updateQuantity = (\n  type,\n  totalQuantitiy,\n  quantitiy,\n  setQuantitiy,\n  setAlertq\n) => {\n  if (type === \"increase\") {\n    if (quantitiy === totalQuantitiy) {\n      setAlertq(true);\n    } else {\n      setQuantitiy(quantitiy + 1);\n    }\n  } else if (type === \"decrease\") {\n    if (quantitiy === 1) {\n      setQuantitiy(1);\n      setAlertq(false);\n    } else {\n      setQuantitiy(quantitiy - 1);\n    }\n  }\n};\n\nexport const slideImage = (type, active, count, setCount, pImages) => {\n  if (active === count) {\n    return true;\n  }\n  if (type === \"increase\") {\n    if (count === pImages.length - 1) {\n      setCount(0);\n    } else if (count < pImages.length) {\n      setCount(count + 1);\n    }\n  }\n};\n\nexport const inCart = (id) => {\n  if (localStorage.getItem(\"cart\")) {\n    let cartProducts = JSON.parse(localStorage.getItem(\"cart\"));\n    for (let product of cartProducts) {\n      if (product.id === id) {\n        return true;\n      }\n    }\n  }\n  return false;\n};\n\nexport const addToCart = (\n  id,\n  quantitiy,\n  price,\n  layoutDispatch,\n  setQuantitiy,\n  setAlertq,\n  fetchData,\n  totalCost\n) => {\n  let isObj = false;\n  let cart = localStorage.getItem(\"cart\")\n    ? JSON.parse(localStorage.getItem(\"cart\"))\n    : [];\n  if (cart.length > 0) {\n    cart.forEach((item) => {\n      if (item.id === id) {\n        isObj = true;\n      }\n    });\n    if (!isObj) {\n      cart.push({ id, quantitiy, price });\n      localStorage.setItem(\"cart\", JSON.stringify(cart));\n    }\n  } else {\n    cart.push({ id, quantitiy, price });\n    localStorage.setItem(\"cart\", JSON.stringify(cart));\n  }\n  layoutDispatch({ type: \"inCart\", payload: cartList() });\n  layoutDispatch({ type: \"cartTotalCost\", payload: totalCost() });\n  setQuantitiy(1);\n  setAlertq(false);\n  fetchData();\n};\n"]},"metadata":{},"sourceType":"module"}