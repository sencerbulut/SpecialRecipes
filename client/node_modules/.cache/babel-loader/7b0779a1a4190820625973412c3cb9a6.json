{"ast":null,"code":"var _jsxFileName = \"D:\\\\308\\\\SpecialRecipes\\\\client\\\\src\\\\components\\\\shop\\\\productDetails\\\\Action.js\";\nimport React from \"react\";\nimport { postAddReview, postDeleteReview } from \"./FetchApi\";\nimport { isAuthenticate } from \"../auth/fetchApi\";\nexport const Alert = (color, text) => /*#__PURE__*/React.createElement(\"div\", {\n  className: `bg-${color}-200 px-4 py-2 my-2 rounded`,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 3\n  }\n}, text);\nexport const reviewSubmitHanlder = (fData, setFdata, fetchData) => {\n  if (!fData.rating || !fData.review) {\n    setFdata({ ...fData,\n      error: \"Rating and review must be required\"\n    });\n  } else if (!isAuthenticate()) {\n    setFdata({ ...fData,\n      error: \"You must need login to review\"\n    });\n  } else {\n    addReview(fData, setFdata, fetchData);\n  }\n};\nexport const deleteReview = async (reviewId, productId, fetchData, setFdata) => {\n  try {\n    let responseData = await postDeleteReview({\n      rId: reviewId,\n      pId: productId\n    });\n\n    if (responseData.success) {\n      fetchData();\n      setFdata({\n        success: responseData.success\n      });\n    } else if (responseData.error) {\n      fetchData();\n    }\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const addReview = async (fData, setFdata, fetchData) => {\n  let formData = {\n    rating: fData.rating,\n    review: fData.review,\n    pId: fData.pId,\n    uId: JSON.parse(localStorage.getItem(\"jwt\")).user._id\n  };\n\n  try {\n    let responseData = await postAddReview(formData);\n\n    if (responseData.success) {\n      setFdata({ ...fData,\n        success: responseData.success,\n        review: \"\",\n        rating: \"\"\n      });\n      fetchData();\n    } else if (responseData.error) {\n      setFdata({ ...fData,\n        error: responseData.error,\n        review: \"\",\n        rating: \"\"\n      });\n      fetchData();\n    }\n  } catch (error) {\n    console.log(error);\n  }\n};","map":{"version":3,"sources":["D:/308/SpecialRecipes/client/src/components/shop/productDetails/Action.js"],"names":["React","postAddReview","postDeleteReview","isAuthenticate","Alert","color","text","reviewSubmitHanlder","fData","setFdata","fetchData","rating","review","error","addReview","deleteReview","reviewId","productId","responseData","rId","pId","success","console","log","formData","uId","JSON","parse","localStorage","getItem","user","_id"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { postAddReview, postDeleteReview } from \"./FetchApi\";\nimport { isAuthenticate } from \"../auth/fetchApi\";\n\nexport const Alert = (color, text) => (\n  <div className={`bg-${color}-200 px-4 py-2 my-2 rounded`}>{text}</div>\n);\n\nexport const reviewSubmitHanlder = (fData, setFdata, fetchData) => {\n  if (!fData.rating || !fData.review) {\n    setFdata({ ...fData, error: \"Rating and review must be required\" });\n  } else if (!isAuthenticate()) {\n    setFdata({ ...fData, error: \"You must need login to review\" });\n  } else {\n    addReview(fData, setFdata, fetchData);\n  }\n};\n\nexport const deleteReview = async (\n  reviewId,\n  productId,\n  fetchData,\n  setFdata\n) => {\n  try {\n    let responseData = await postDeleteReview({\n      rId: reviewId,\n      pId: productId,\n    });\n    if (responseData.success) {\n      fetchData();\n      setFdata({ success: responseData.success });\n    } else if (responseData.error) {\n      fetchData();\n    }\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const addReview = async (fData, setFdata, fetchData) => {\n  let formData = {\n    rating: fData.rating,\n    review: fData.review,\n    pId: fData.pId,\n    uId: JSON.parse(localStorage.getItem(\"jwt\")).user._id,\n  };\n  try {\n    let responseData = await postAddReview(formData);\n    if (responseData.success) {\n      setFdata({\n        ...fData,\n        success: responseData.success,\n        review: \"\",\n        rating: \"\",\n      });\n      fetchData();\n    } else if (responseData.error) {\n      setFdata({ ...fData, error: responseData.error, review: \"\", rating: \"\" });\n      fetchData();\n    }\n  } catch (error) {\n    console.log(error);\n  }\n};\n"]},"metadata":{},"sourceType":"module"}