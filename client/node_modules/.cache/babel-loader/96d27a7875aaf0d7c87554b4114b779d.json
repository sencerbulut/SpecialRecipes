{"ast":null,"code":"import { createOrder } from \"./FetchApi\";\nexport const fetchData = async (cartListProduct, dispatch) => {\n  dispatch({\n    type: \"loading\",\n    payload: true\n  });\n\n  try {\n    let responseData = await cartListProduct();\n\n    if (responseData && responseData.Products) {\n      setTimeout(function () {\n        dispatch({\n          type: \"cartProduct\",\n          payload: responseData.Products\n        });\n        dispatch({\n          type: \"loading\",\n          payload: false\n        });\n      }, 1000);\n    }\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const fetchbrainTree = async (getBrainTreeToken, setState) => {\n  try {\n    let responseData = await getBrainTreeToken();\n\n    if (responseData && responseData) {\n      setState({\n        clientToken: responseData.clientToken,\n        success: responseData.success\n      });\n      console.log(responseData);\n    }\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const pay = async (data, dispatch, state, setState, getPaymentProcess, totalCost, history) => {\n  console.log(state);\n\n  if (!state.address) {\n    setState({ ...state,\n      error: \"Please provide your address\"\n    });\n  } else if (!state.phone) {\n    setState({ ...state,\n      error: \"Please provide your phone number\"\n    });\n  } else {\n    dispatch({\n      type: \"loading\",\n      payload: true\n    });\n    let paymentData = {\n      amountTotal: totalCost()\n    };\n    getPaymentProcess(paymentData).then(async res => {\n      if (res) {\n        let orderData = {\n          allProduct: JSON.parse(localStorage.getItem(\"cart\")),\n          user: JSON.parse(localStorage.getItem(\"jwt\")).user._id,\n          amount: res.transaction.amount,\n          transactionId: res.transaction.id,\n          address: state.address,\n          phone: state.phone\n        };\n        console.log(orderData);\n\n        try {\n          let resposeData = await createOrder(orderData);\n\n          if (resposeData.success) {\n            localStorage.setItem(\"cart\", JSON.stringify([]));\n            dispatch({\n              type: \"cartProduct\",\n              payload: null\n            });\n            dispatch({\n              type: \"cartTotalCost\",\n              payload: null\n            });\n            dispatch({\n              type: \"orderSuccess\",\n              payload: true\n            });\n            setState({\n              clientToken: \"\",\n              instance: {}\n            });\n            dispatch({\n              type: \"loading\",\n              payload: false\n            });\n            return history.push(\"/\");\n          } else if (resposeData.error) {\n            console.log(resposeData.error);\n          }\n        } catch (error) {\n          console.log(error);\n        }\n      }\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n};","map":{"version":3,"sources":["C:/Users/cagat/Desktop/SpecialRecipes/client/src/components/shop/order/Action.js"],"names":["createOrder","fetchData","cartListProduct","dispatch","type","payload","responseData","Products","setTimeout","error","console","log","fetchbrainTree","getBrainTreeToken","setState","clientToken","success","pay","data","state","getPaymentProcess","totalCost","history","address","phone","paymentData","amountTotal","then","res","orderData","allProduct","JSON","parse","localStorage","getItem","user","_id","amount","transaction","transactionId","id","resposeData","setItem","stringify","instance","push","catch","err"],"mappings":"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","sourcesContent":["import { createOrder } from \"./FetchApi\";\n\nexport const fetchData = async (cartListProduct, dispatch) => {\n  dispatch({ type: \"loading\", payload: true });\n  try {\n    let responseData = await cartListProduct();\n    if (responseData && responseData.Products) {\n      setTimeout(function () {\n        dispatch({ type: \"cartProduct\", payload: responseData.Products });\n        dispatch({ type: \"loading\", payload: false });\n      }, 1000);\n    }\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const fetchbrainTree = async (getBrainTreeToken, setState) => {\n  try {\n    let responseData = await getBrainTreeToken();\n    if (responseData && responseData) {\n      setState({\n        clientToken: responseData.clientToken,\n        success: responseData.success,\n      });\n      console.log(responseData);\n    }\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const pay = async (\n  data,\n  dispatch,\n  state,\n  setState,\n  getPaymentProcess,\n  totalCost,\n  history\n) => {\n  console.log(state);\n  if (!state.address) {\n    setState({ ...state, error: \"Please provide your address\" });\n  } else if (!state.phone) {\n    setState({ ...state, error: \"Please provide your phone number\" });\n  } else {\n        dispatch({ type: \"loading\", payload: true });\n        let paymentData = {\n          amountTotal: totalCost()\n        };\n        getPaymentProcess(paymentData)\n          .then(async (res) => {\n            if (res) {\n              let orderData = {\n                allProduct: JSON.parse(localStorage.getItem(\"cart\")),\n                user: JSON.parse(localStorage.getItem(\"jwt\")).user._id,\n                amount: res.transaction.amount,\n                transactionId: res.transaction.id,\n                address: state.address,\n                phone: state.phone,\n              };\n              console.log(orderData)\n              try {\n                let resposeData = await createOrder(orderData);\n                if (resposeData.success) {\n                  localStorage.setItem(\"cart\", JSON.stringify([]));\n                  dispatch({ type: \"cartProduct\", payload: null });\n                  dispatch({ type: \"cartTotalCost\", payload: null });\n                  dispatch({ type: \"orderSuccess\", payload: true });\n                  setState({ clientToken: \"\", instance: {} });\n                  dispatch({ type: \"loading\", payload: false });\n                  return history.push(\"/\");\n                } else if (resposeData.error) {\n                  console.log(resposeData.error);\n                }\n              } catch (error) {\n                console.log(error);\n              }\n            }\n          })\n          .catch((err) => {\n            console.log(err);\n          });\n  }\n};\n"]},"metadata":{},"sourceType":"module"}