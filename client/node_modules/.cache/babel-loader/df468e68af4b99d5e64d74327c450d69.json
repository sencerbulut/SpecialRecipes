{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\cagat\\\\Desktop\\\\SpecialRecipes\\\\client\\\\src\\\\components\\\\shop\\\\productDetails\\\\ReviewForm.js\";\nimport React, { Fragment, useState, useContext } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { Alert, reviewSubmitHanlder } from \"./Action\";\nimport { LayoutContext } from \"../layout\";\nimport { isAuthenticate } from \"../auth/fetchApi\";\nimport { getSingleProduct } from \"./FetchApi\";\n\nconst ReviewForm = props => {\n  const {\n    data,\n    dispatch\n  } = useContext(LayoutContext);\n  let {\n    id\n  } = useParams(); // Product Id\n\n  const [fData, setFdata] = useState({\n    rating: \"\",\n    review: \"\",\n    error: false,\n    success: false,\n    pId: id\n  });\n\n  if (fData.error || fData.success) {\n    setTimeout(() => {\n      setFdata({ ...fData,\n        error: false,\n        success: false\n      });\n    }, 3000);\n  }\n\n  const fetchData = async () => {\n    try {\n      let responseData = await getSingleProduct(id);\n\n      if (responseData.Product) {\n        dispatch({\n          type: \"singleProductDetail\",\n          payload: responseData.Product\n        });\n        console.log(data);\n      }\n\n      if (responseData.error) {\n        console.log(responseData.error);\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const ratingUserList = data.singleProductDetail.pRatingsReviews.map(item => {\n    return item.user ? item.user._id : \"\";\n  });\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"md:mx-16 lg:mx-20 xl:mx-24 flex flex-col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }\n  }, fData.error ? Alert(\"red\", fData.error) : \"\", fData.success ? Alert(\"green\", fData.success) : \"\"), ratingUserList.includes(isAuthenticate().user._id) ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mb-12 md:mx-16 lg:mx-20 xl:mx-24\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }\n  }) : /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mb-12 md:mx-16 lg:mx-20 xl:mx-24 flex flex-col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"flex flex-col space-y-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"text-2xl font-medium\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }\n  }, \"Add a review\"), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"text-gray-600 text-sm\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }\n  }, \"Your email address will not be published. Required fields are marked *\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mb-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"fieldset\", {\n    onChange: e => setFdata({ ...fData,\n      rating: e.target.value\n    }),\n    className: \"rating\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"radio\",\n    className: \"rating\",\n    id: \"star5\",\n    name: \"rating\",\n    defaultValue: 5,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    className: \"full\",\n    htmlFor: \"star5\",\n    title: \"Awesome - 5 stars\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"radio\",\n    className: \"rating\",\n    id: \"star4\",\n    name: \"rating\",\n    defaultValue: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    className: \"full\",\n    htmlFor: \"star4\",\n    title: \"Pretty good - 4 stars\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"radio\",\n    className: \"rating\",\n    id: \"star3\",\n    name: \"rating\",\n    defaultValue: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    className: \"full\",\n    htmlFor: \"star3\",\n    title: \"Meh - 3 stars\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"radio\",\n    className: \"rating\",\n    id: \"star2\",\n    name: \"rating\",\n    defaultValue: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    className: \"full\",\n    htmlFor: \"star2\",\n    title: \"Kinda bad - 2 stars\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"radio\",\n    className: \"rating\",\n    id: \"star1\",\n    name: \"rating\",\n    defaultValue: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    className: \"full\",\n    htmlFor: \"star1\",\n    title: \"Sucks big time - 1 star\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 15\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"space-y-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"flex flex-col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"textArea\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 15\n    }\n  }, \"Review \", /*#__PURE__*/React.createElement(\"span\", {\n    className: \"text-sm text-gray-600\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 24\n    }\n  }, \"*\")), /*#__PURE__*/React.createElement(\"textarea\", {\n    onChange: e => setFdata({ ...fData,\n      review: e.target.value\n    }),\n    value: fData.review,\n    className: \"border px-4 py-2 focus:outline-none\",\n    name: \"textArea\",\n    id: \"textArea\",\n    cols: 30,\n    rows: 3,\n    placeholder: \"Your review...\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    onClick: e => reviewSubmitHanlder(fData, setFdata, fetchData),\n    style: {\n      background: \"#303031\"\n    },\n    className: \"inline-block rounded px-4 py-2 text-white text-center cursor-pointer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 13\n    }\n  }, \"Submit\"))));\n};\n\nexport default ReviewForm;","map":{"version":3,"sources":["C:/Users/cagat/Desktop/SpecialRecipes/client/src/components/shop/productDetails/ReviewForm.js"],"names":["React","Fragment","useState","useContext","useParams","Alert","reviewSubmitHanlder","LayoutContext","isAuthenticate","getSingleProduct","ReviewForm","props","data","dispatch","id","fData","setFdata","rating","review","error","success","pId","setTimeout","fetchData","responseData","Product","type","payload","console","log","ratingUserList","singleProductDetail","pRatingsReviews","map","item","user","_id","includes","e","target","value","background"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,QAA1B,EAAoCC,UAApC,QAAsD,OAAtD;AACA,SAASC,SAAT,QAA0B,kBAA1B;AACA,SAASC,KAAT,EAAgBC,mBAAhB,QAA2C,UAA3C;AACA,SAASC,aAAT,QAA8B,WAA9B;AACA,SAASC,cAAT,QAA+B,kBAA/B;AACA,SAASC,gBAAT,QAAiC,YAAjC;;AAEA,MAAMC,UAAU,GAAIC,KAAD,IAAW;AAC5B,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA;AAAR,MAAqBV,UAAU,CAACI,aAAD,CAArC;AACA,MAAI;AAAEO,IAAAA;AAAF,MAASV,SAAS,EAAtB,CAF4B,CAEF;;AAE1B,QAAM,CAACW,KAAD,EAAQC,QAAR,IAAoBd,QAAQ,CAAC;AACjCe,IAAAA,MAAM,EAAE,EADyB;AAEjCC,IAAAA,MAAM,EAAE,EAFyB;AAGjCC,IAAAA,KAAK,EAAE,KAH0B;AAIjCC,IAAAA,OAAO,EAAE,KAJwB;AAKjCC,IAAAA,GAAG,EAAEP;AAL4B,GAAD,CAAlC;;AAQA,MAAIC,KAAK,CAACI,KAAN,IAAeJ,KAAK,CAACK,OAAzB,EAAkC;AAChCE,IAAAA,UAAU,CAAC,MAAM;AACfN,MAAAA,QAAQ,CAAC,EAAE,GAAGD,KAAL;AAAYI,QAAAA,KAAK,EAAE,KAAnB;AAA0BC,QAAAA,OAAO,EAAE;AAAnC,OAAD,CAAR;AACD,KAFS,EAEP,IAFO,CAAV;AAGD;;AAED,QAAMG,SAAS,GAAG,YAAY;AAC5B,QAAI;AACF,UAAIC,YAAY,GAAG,MAAMf,gBAAgB,CAACK,EAAD,CAAzC;;AACA,UAAIU,YAAY,CAACC,OAAjB,EAA0B;AACxBZ,QAAAA,QAAQ,CAAC;AACPa,UAAAA,IAAI,EAAE,qBADC;AAEPC,UAAAA,OAAO,EAAEH,YAAY,CAACC;AAFf,SAAD,CAAR;AAIAG,QAAAA,OAAO,CAACC,GAAR,CAAYjB,IAAZ;AACD;;AACD,UAAIY,YAAY,CAACL,KAAjB,EAAwB;AACtBS,QAAAA,OAAO,CAACC,GAAR,CAAYL,YAAY,CAACL,KAAzB;AACD;AACF,KAZD,CAYE,OAAOA,KAAP,EAAc;AACdS,MAAAA,OAAO,CAACC,GAAR,CAAYV,KAAZ;AACD;AACF,GAhBD;;AAkBA,QAAMW,cAAc,GAAGlB,IAAI,CAACmB,mBAAL,CAAyBC,eAAzB,CAAyCC,GAAzC,CACpBC,IAAD,IAAU;AACR,WAAOA,IAAI,CAACC,IAAL,GAAYD,IAAI,CAACC,IAAL,CAAUC,GAAtB,GAA4B,EAAnC;AACD,GAHoB,CAAvB;AAMA,sBACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,0CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGrB,KAAK,CAACI,KAAN,GAAcd,KAAK,CAAC,KAAD,EAAQU,KAAK,CAACI,KAAd,CAAnB,GAA0C,EAD7C,EAEGJ,KAAK,CAACK,OAAN,GAAgBf,KAAK,CAAC,OAAD,EAAUU,KAAK,CAACK,OAAhB,CAArB,GAAgD,EAFnD,CADF,EAKGU,cAAc,CAACO,QAAf,CAAwB7B,cAAc,GAAG2B,IAAjB,CAAsBC,GAA9C,iBACC;AAAK,IAAA,SAAS,EAAC,kCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,gBAGC;AAAK,IAAA,SAAS,EAAC,gDAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,yBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAM,IAAA,SAAS,EAAC,sBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE;AAAM,IAAA,SAAS,EAAC,uBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8EAFF,CADF,eASE;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AACE,IAAA,QAAQ,EAAGE,CAAD,IAAOtB,QAAQ,CAAC,EAAE,GAAGD,KAAL;AAAYE,MAAAA,MAAM,EAAEqB,CAAC,CAACC,MAAF,CAASC;AAA7B,KAAD,CAD3B;AAEE,IAAA,SAAS,EAAC,QAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAIE;AACE,IAAA,IAAI,EAAC,OADP;AAEE,IAAA,SAAS,EAAC,QAFZ;AAGE,IAAA,EAAE,EAAC,OAHL;AAIE,IAAA,IAAI,EAAC,QAJP;AAKE,IAAA,YAAY,EAAE,CALhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,eAWE;AACE,IAAA,SAAS,EAAC,MADZ;AAEE,IAAA,OAAO,EAAC,OAFV;AAGE,IAAA,KAAK,EAAC,mBAHR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAXF,eAgBE;AACE,IAAA,IAAI,EAAC,OADP;AAEE,IAAA,SAAS,EAAC,QAFZ;AAGE,IAAA,EAAE,EAAC,OAHL;AAIE,IAAA,IAAI,EAAC,QAJP;AAKE,IAAA,YAAY,EAAE,CALhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAhBF,eAuBE;AACE,IAAA,SAAS,EAAC,MADZ;AAEE,IAAA,OAAO,EAAC,OAFV;AAGE,IAAA,KAAK,EAAC,uBAHR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAvBF,eA4BE;AACE,IAAA,IAAI,EAAC,OADP;AAEE,IAAA,SAAS,EAAC,QAFZ;AAGE,IAAA,EAAE,EAAC,OAHL;AAIE,IAAA,IAAI,EAAC,QAJP;AAKE,IAAA,YAAY,EAAE,CALhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA5BF,eAmCE;AAAO,IAAA,SAAS,EAAC,MAAjB;AAAwB,IAAA,OAAO,EAAC,OAAhC;AAAwC,IAAA,KAAK,EAAC,eAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAnCF,eAoCE;AACE,IAAA,IAAI,EAAC,OADP;AAEE,IAAA,SAAS,EAAC,QAFZ;AAGE,IAAA,EAAE,EAAC,OAHL;AAIE,IAAA,IAAI,EAAC,QAJP;AAKE,IAAA,YAAY,EAAE,CALhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IApCF,eA2CE;AACE,IAAA,SAAS,EAAC,MADZ;AAEE,IAAA,OAAO,EAAC,OAFV;AAGE,IAAA,KAAK,EAAC,qBAHR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA3CF,eAgDE;AACE,IAAA,IAAI,EAAC,OADP;AAEE,IAAA,SAAS,EAAC,QAFZ;AAGE,IAAA,EAAE,EAAC,OAHL;AAIE,IAAA,IAAI,EAAC,QAJP;AAKE,IAAA,YAAY,EAAE,CALhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAhDF,eAuDE;AACE,IAAA,SAAS,EAAC,MADZ;AAEE,IAAA,OAAO,EAAC,OAFV;AAGE,IAAA,KAAK,EAAC,yBAHR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAvDF,CADF,CATF,eAyEE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAO,IAAA,OAAO,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BACS;AAAM,IAAA,SAAS,EAAC,uBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SADT,CADF,eAIE;AACE,IAAA,QAAQ,EAAGF,CAAD,IAAOtB,QAAQ,CAAC,EAAE,GAAGD,KAAL;AAAYG,MAAAA,MAAM,EAAEoB,CAAC,CAACC,MAAF,CAASC;AAA7B,KAAD,CAD3B;AAEE,IAAA,KAAK,EAAEzB,KAAK,CAACG,MAFf;AAGE,IAAA,SAAS,EAAC,qCAHZ;AAIE,IAAA,IAAI,EAAC,UAJP;AAKE,IAAA,EAAE,EAAC,UALL;AAME,IAAA,IAAI,EAAE,EANR;AAOE,IAAA,IAAI,EAAE,CAPR;AAQE,IAAA,WAAW,EAAC,gBARd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,CADF,eAgBE;AACE,IAAA,OAAO,EAAGoB,CAAD,IAAOhC,mBAAmB,CAACS,KAAD,EAAQC,QAAR,EAAkBO,SAAlB,CADrC;AAEE,IAAA,KAAK,EAAE;AAAEkB,MAAAA,UAAU,EAAE;AAAd,KAFT;AAGE,IAAA,SAAS,EAAC,sEAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAhBF,CAzEF,CARJ,CADF;AA8GD,CAxJD;;AA0JA,eAAe/B,UAAf","sourcesContent":["import React, { Fragment, useState, useContext } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { Alert, reviewSubmitHanlder } from \"./Action\";\nimport { LayoutContext } from \"../layout\";\nimport { isAuthenticate } from \"../auth/fetchApi\";\nimport { getSingleProduct } from \"./FetchApi\";\n\nconst ReviewForm = (props) => {\n  const { data, dispatch } = useContext(LayoutContext);\n  let { id } = useParams(); // Product Id\n\n  const [fData, setFdata] = useState({\n    rating: \"\",\n    review: \"\",\n    error: false,\n    success: false,\n    pId: id,\n  });\n\n  if (fData.error || fData.success) {\n    setTimeout(() => {\n      setFdata({ ...fData, error: false, success: false });\n    }, 3000);\n  }\n\n  const fetchData = async () => {\n    try {\n      let responseData = await getSingleProduct(id);\n      if (responseData.Product) {\n        dispatch({\n          type: \"singleProductDetail\",\n          payload: responseData.Product,\n        });\n        console.log(data);\n      }\n      if (responseData.error) {\n        console.log(responseData.error);\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const ratingUserList = data.singleProductDetail.pRatingsReviews.map(\n    (item) => {\n      return item.user ? item.user._id : \"\";\n    }\n  );\n\n  return (\n    <Fragment>\n      <div className=\"md:mx-16 lg:mx-20 xl:mx-24 flex flex-col\">\n        {fData.error ? Alert(\"red\", fData.error) : \"\"}\n        {fData.success ? Alert(\"green\", fData.success) : \"\"}\n      </div>\n      {ratingUserList.includes(isAuthenticate().user._id) ? (\n        <div className=\"mb-12 md:mx-16 lg:mx-20 xl:mx-24\"></div>\n      ) : (\n        <div className=\"mb-12 md:mx-16 lg:mx-20 xl:mx-24 flex flex-col\">\n          <div className=\"flex flex-col space-y-2\">\n            <span className=\"text-2xl font-medium\">Add a review</span>\n            <span className=\"text-gray-600 text-sm\">\n              Your email address will not be published. Required fields are\n              marked *\n            </span>\n          </div>\n          {/* Input Rating */}\n          <div className=\"mb-4\">\n            <fieldset\n              onChange={(e) => setFdata({ ...fData, rating: e.target.value })}\n              className=\"rating\"\n            >\n              <input\n                type=\"radio\"\n                className=\"rating\"\n                id=\"star5\"\n                name=\"rating\"\n                defaultValue={5}\n              />\n              <label\n                className=\"full\"\n                htmlFor=\"star5\"\n                title=\"Awesome - 5 stars\"\n              />\n              <input\n                type=\"radio\"\n                className=\"rating\"\n                id=\"star4\"\n                name=\"rating\"\n                defaultValue={4}\n              />\n              <label\n                className=\"full\"\n                htmlFor=\"star4\"\n                title=\"Pretty good - 4 stars\"\n              />\n              <input\n                type=\"radio\"\n                className=\"rating\"\n                id=\"star3\"\n                name=\"rating\"\n                defaultValue={3}\n              />\n              <label className=\"full\" htmlFor=\"star3\" title=\"Meh - 3 stars\" />\n              <input\n                type=\"radio\"\n                className=\"rating\"\n                id=\"star2\"\n                name=\"rating\"\n                defaultValue={2}\n              />\n              <label\n                className=\"full\"\n                htmlFor=\"star2\"\n                title=\"Kinda bad - 2 stars\"\n              />\n              <input\n                type=\"radio\"\n                className=\"rating\"\n                id=\"star1\"\n                name=\"rating\"\n                defaultValue={1}\n              />\n              <label\n                className=\"full\"\n                htmlFor=\"star1\"\n                title=\"Sucks big time - 1 star\"\n              />\n            </fieldset>\n          </div>\n          {/* Review Form */}\n          <div className=\"space-y-4\">\n            <div className=\"flex flex-col\">\n              <label htmlFor=\"textArea\">\n                Review <span className=\"text-sm text-gray-600\">*</span>\n              </label>\n              <textarea\n                onChange={(e) => setFdata({ ...fData, review: e.target.value })}\n                value={fData.review}\n                className=\"border px-4 py-2 focus:outline-none\"\n                name=\"textArea\"\n                id=\"textArea\"\n                cols={30}\n                rows={3}\n                placeholder=\"Your review...\"\n              />\n            </div>\n            <div\n              onClick={(e) => reviewSubmitHanlder(fData, setFdata, fetchData)}\n              style={{ background: \"#303031\" }}\n              className=\"inline-block rounded px-4 py-2 text-white text-center cursor-pointer\"\n            >\n              Submit\n            </div>\n          </div>\n        </div>\n      )}\n    </Fragment>\n  );\n};\n\nexport default ReviewForm;\n"]},"metadata":{},"sourceType":"module"}