{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\cagat\\\\Desktop\\\\SpecialRecipes\\\\client\\\\src\\\\components\\\\admin\\\\products\\\\EditProductModal.js\";\nimport React, { Fragment, useContext, useState, useEffect } from \"react\";\nimport { ProductContext } from \"./index\";\nimport { editProduct, getAllProduct } from \"./FetchApi\";\nimport { getAllCategory } from \"../categories/FetchApi\";\nconst apiURL = process.env.REACT_APP_API_URL;\n\nconst EditProductModal = props => {\n  const {\n    data,\n    dispatch\n  } = useContext(ProductContext);\n  const [categories, setCategories] = useState(null);\n\n  const alert = (msg, type) => /*#__PURE__*/React.createElement(\"div\", {\n    className: `bg-${type}-200 py-2 px-4 w-full`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 5\n    }\n  }, msg);\n\n  const [editformData, setEditformdata] = useState({\n    pId: \"\",\n    pName: \"\",\n    pDescription: \"\",\n    pImages: null,\n    pEditImages: null,\n    pStatus: \"\",\n    pCategory: \"\",\n    pQuantity: \"\",\n    pPrice: \"\",\n    pOffer: \"\",\n    error: false,\n    success: false\n  });\n  useEffect(() => {\n    fetchCategoryData();\n  }, []);\n\n  const fetchCategoryData = async () => {\n    let responseData = await getAllCategory();\n\n    if (responseData.Categories) {\n      setCategories(responseData.Categories);\n    }\n  };\n\n  useEffect(() => {\n    setEditformdata({\n      pId: data.editProductModal.pId,\n      pName: data.editProductModal.pName,\n      pDescription: data.editProductModal.pDescription,\n      pImages: data.editProductModal.pImages,\n      pStatus: data.editProductModal.pStatus,\n      pCategory: data.editProductModal.pCategory,\n      pQuantity: data.editProductModal.pQuantity,\n      pPrice: data.editProductModal.pPrice,\n      pOffer: data.editProductModal.pOffer\n    });\n  }, [data.editProductModal]);\n\n  const fetchData = async () => {\n    let responseData = await getAllProduct();\n\n    if (responseData && responseData.Products) {\n      dispatch({\n        type: \"fetchProductsAndChangeState\",\n        payload: responseData.Products\n      });\n    }\n  };\n\n  const submitForm = async e => {\n    e.preventDefault();\n\n    if (!editformData.pEditImages) {\n      console.log(\"Image Not upload=============\", editformData);\n    } else {\n      console.log(\"Image uploading\");\n    }\n\n    try {\n      let responseData = await editProduct(editformData);\n\n      if (responseData.success) {\n        fetchData();\n        setEditformdata({ ...editformData,\n          success: responseData.success\n        });\n        setTimeout(() => {\n          return setEditformdata({ ...editformData,\n            success: responseData.success\n          });\n        }, 2000);\n      } else if (responseData.error) {\n        setEditformdata({ ...editformData,\n          error: responseData.error\n        });\n        setTimeout(() => {\n          return setEditformdata({ ...editformData,\n            error: responseData.error\n          });\n        }, 2000);\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    onClick: e => dispatch({\n      type: \"editProductModalClose\",\n      payload: false\n    }),\n    className: `${data.editProductModal.modal ? \"\" : \"hidden\"} fixed top-0 left-0 z-30 w-full h-full bg-black opacity-50`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: `${data.editProductModal.modal ? \"\" : \"hidden\"} fixed inset-0 flex items-center z-30 justify-center overflow-auto`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mt-32 md:mt-0 relative bg-white w-11/12 md:w-3/6 shadow-lg flex flex-col items-center space-y-4 px-4 py-4 md:px-8\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"flex items-center justify-between w-full pt-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"text-left font-semibold text-2xl tracking-wider\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 13\n    }\n  }, \"Edit Product\"), /*#__PURE__*/React.createElement(\"span\", {\n    style: {\n      background: \"#303031\"\n    },\n    onClick: e => dispatch({\n      type: \"editProductModalClose\",\n      payload: false\n    }),\n    className: \"cursor-pointer text-gray-100 py-2 px-2 rounded-full\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"svg\", {\n    className: \"w-6 h-6\",\n    fill: \"none\",\n    stroke: \"currentColor\",\n    viewBox: \"0 0 24 24\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: 2,\n    d: \"M6 18L18 6M6 6l12 12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 17\n    }\n  })))), editformData.error ? alert(editformData.error, \"red\") : \"\", editformData.success ? alert(editformData.success, \"green\") : \"\", /*#__PURE__*/React.createElement(\"form\", {\n    className: \"w-full\",\n    onSubmit: e => submitForm(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"flex space-x-1 py-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"w-1/2 flex flex-col space-y-1 space-x-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 17\n    }\n  }, \"Product Name *\"), /*#__PURE__*/React.createElement(\"input\", {\n    value: editformData.pName,\n    onChange: e => setEditformdata({ ...editformData,\n      error: false,\n      success: false,\n      pName: e.target.value\n    }),\n    className: \"px-4 py-2 border focus:outline-none\",\n    type: \"text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"w-1/2 flex flex-col space-y-1 space-x-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"price\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 17\n    }\n  }, \"Product Price *\"), /*#__PURE__*/React.createElement(\"input\", {\n    value: editformData.pPrice,\n    onChange: e => setEditformdata({ ...editformData,\n      error: false,\n      success: false,\n      pPrice: e.target.value\n    }),\n    type: \"number\",\n    className: \"px-4 py-2 border focus:outline-none\",\n    id: \"price\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 17\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"flex flex-col space-y-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"description\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 15\n    }\n  }, \"Product Description *\"), /*#__PURE__*/React.createElement(\"textarea\", {\n    value: editformData.pDescription,\n    onChange: e => setEditformdata({ ...editformData,\n      error: false,\n      success: false,\n      pDescription: e.target.value\n    }),\n    className: \"px-4 py-2 border focus:outline-none\",\n    name: \"description\",\n    id: \"description\",\n    cols: 5,\n    rows: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"flex flex-col mt-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"image\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 15\n    }\n  }, \"Product Images *\"), editformData.pImages ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"flex space-x-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    className: \"h-16 w-16 object-cover\",\n    src: `${apiURL}/uploads/products/${editformData.pImages[0]}`,\n    alt: \"productImage\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 19\n    }\n  }), /*#__PURE__*/React.createElement(\"img\", {\n    className: \"h-16 w-16 object-cover\",\n    src: `${apiURL}/uploads/products/${editformData.pImages[1]}`,\n    alt: \"productImage\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 19\n    }\n  })) : \"\", /*#__PURE__*/React.createElement(\"span\", {\n    className: \"text-gray-600 text-xs\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 15\n    }\n  }, \"Must need 2 images\"), /*#__PURE__*/React.createElement(\"input\", {\n    onChange: e => setEditformdata({ ...editformData,\n      error: false,\n      success: false,\n      pEditImages: [...e.target.files]\n    }),\n    type: \"file\",\n    accept: \".jpg, .jpeg, .png\",\n    className: \"px-4 py-2 border focus:outline-none\",\n    id: \"image\",\n    multiple: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"flex space-x-1 py-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"w-1/2 flex flex-col space-y-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"status\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 17\n    }\n  }, \"Product Status *\"), /*#__PURE__*/React.createElement(\"select\", {\n    value: editformData.pStatus,\n    onChange: e => setEditformdata({ ...editformData,\n      error: false,\n      success: false,\n      pStatus: e.target.value\n    }),\n    name: \"status\",\n    className: \"px-4 py-2 border focus:outline-none\",\n    id: \"status\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    name: \"status\",\n    value: \"Active\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 257,\n      columnNumber: 19\n    }\n  }, \"Active\"), /*#__PURE__*/React.createElement(\"option\", {\n    name: \"status\",\n    value: \"Disabled\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 260,\n      columnNumber: 19\n    }\n  }, \"Disabled\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"w-1/2 flex flex-col space-y-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 265,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"status\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 266,\n      columnNumber: 17\n    }\n  }, \"Product Category *\"), /*#__PURE__*/React.createElement(\"select\", {\n    onChange: e => setEditformdata({ ...editformData,\n      error: false,\n      success: false,\n      pCategory: e.target.value\n    }),\n    name: \"status\",\n    className: \"px-4 py-2 border focus:outline-none\",\n    id: \"status\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 267,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    disabled: true,\n    value: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 280,\n      columnNumber: 19\n    }\n  }, \"Select a category\"), categories && categories.length > 0 ? categories.map(elem => {\n    return /*#__PURE__*/React.createElement(Fragment, {\n      key: elem._id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 286,\n        columnNumber: 27\n      }\n    }, editformData.pCategory._id && editformData.pCategory._id === elem._id ? /*#__PURE__*/React.createElement(\"option\", {\n      name: \"status\",\n      value: elem._id,\n      key: elem._id,\n      selected: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 289,\n        columnNumber: 31\n      }\n    }, elem.cName) : /*#__PURE__*/React.createElement(\"option\", {\n      name: \"status\",\n      value: elem._id,\n      key: elem._id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 298,\n        columnNumber: 31\n      }\n    }, elem.cName));\n  }) : \"\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"flex space-x-1 py-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 313,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"w-1/2 flex flex-col space-y-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 314,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"quantity\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 315,\n      columnNumber: 17\n    }\n  }, \"Product in Stock *\"), /*#__PURE__*/React.createElement(\"input\", {\n    value: editformData.pQuantity,\n    onChange: e => setEditformdata({ ...editformData,\n      error: false,\n      success: false,\n      pQuantity: e.target.value\n    }),\n    type: \"number\",\n    className: \"px-4 py-2 border focus:outline-none\",\n    id: \"quantity\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 316,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"w-1/2 flex flex-col space-y-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 331,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"offer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 332,\n      columnNumber: 17\n    }\n  }, \"Product Offfer (%) *\"), /*#__PURE__*/React.createElement(\"input\", {\n    value: editformData.pOffer,\n    onChange: e => setEditformdata({ ...editformData,\n      error: false,\n      success: false,\n      pOffer: e.target.value\n    }),\n    type: \"number\",\n    className: \"px-4 py-2 border focus:outline-none\",\n    id: \"offer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 333,\n      columnNumber: 17\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"flex flex-col space-y-1 w-full pb-4 md:pb-6 mt-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 349,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    style: {\n      background: \"#303031\"\n    },\n    type: \"submit\",\n    className: \"rounded-full bg-gray-800 text-gray-100 text-lg font-medium py-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 350,\n      columnNumber: 15\n    }\n  }, \"Update product\"))))));\n};\n\nexport default EditProductModal;","map":{"version":3,"sources":["C:/Users/cagat/Desktop/SpecialRecipes/client/src/components/admin/products/EditProductModal.js"],"names":["React","Fragment","useContext","useState","useEffect","ProductContext","editProduct","getAllProduct","getAllCategory","apiURL","process","env","REACT_APP_API_URL","EditProductModal","props","data","dispatch","categories","setCategories","alert","msg","type","editformData","setEditformdata","pId","pName","pDescription","pImages","pEditImages","pStatus","pCategory","pQuantity","pPrice","pOffer","error","success","fetchCategoryData","responseData","Categories","editProductModal","fetchData","Products","payload","submitForm","e","preventDefault","console","log","setTimeout","modal","background","target","value","files","length","map","elem","_id","cName"],"mappings":"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","sourcesContent":["import React, { Fragment, useContext, useState, useEffect } from \"react\";\nimport { ProductContext } from \"./index\";\nimport { editProduct, getAllProduct } from \"./FetchApi\";\nimport { getAllCategory } from \"../categories/FetchApi\";\nconst apiURL = process.env.REACT_APP_API_URL;\n\nconst EditProductModal = (props) => {\n  const { data, dispatch } = useContext(ProductContext);\n\n  const [categories, setCategories] = useState(null);\n\n  const alert = (msg, type) => (\n    <div className={`bg-${type}-200 py-2 px-4 w-full`}>{msg}</div>\n  );\n\n  const [editformData, setEditformdata] = useState({\n    pId: \"\",\n    pName: \"\",\n    pDescription: \"\",\n    pImages: null,\n    pEditImages: null,\n    pStatus: \"\",\n    pCategory: \"\",\n    pQuantity: \"\",\n    pPrice: \"\",\n    pOffer: \"\",\n    error: false,\n    success: false,\n  });\n\n  useEffect(() => {\n    fetchCategoryData();\n  }, []);\n\n  const fetchCategoryData = async () => {\n    let responseData = await getAllCategory();\n    if (responseData.Categories) {\n      setCategories(responseData.Categories);\n    }\n  };\n\n  useEffect(() => {\n    setEditformdata({\n      pId: data.editProductModal.pId,\n      pName: data.editProductModal.pName,\n      pDescription: data.editProductModal.pDescription,\n      pImages: data.editProductModal.pImages,\n      pStatus: data.editProductModal.pStatus,\n      pCategory: data.editProductModal.pCategory,\n      pQuantity: data.editProductModal.pQuantity,\n      pPrice: data.editProductModal.pPrice,\n      pOffer: data.editProductModal.pOffer,\n    });\n  }, [data.editProductModal]);\n\n  const fetchData = async () => {\n    let responseData = await getAllProduct();\n    if (responseData && responseData.Products) {\n      dispatch({\n        type: \"fetchProductsAndChangeState\",\n        payload: responseData.Products,\n      });\n    }\n  };\n\n  const submitForm = async (e) => {\n    e.preventDefault();\n    if (!editformData.pEditImages) {\n      console.log(\"Image Not upload=============\", editformData);\n    } else {\n      console.log(\"Image uploading\");\n    }\n    try {\n      let responseData = await editProduct(editformData);\n      if (responseData.success) {\n        fetchData();\n        setEditformdata({ ...editformData, success: responseData.success });\n        setTimeout(() => {\n          return setEditformdata({\n            ...editformData,\n            success: responseData.success,\n          });\n        }, 2000);\n      } else if (responseData.error) {\n        setEditformdata({ ...editformData, error: responseData.error });\n        setTimeout(() => {\n          return setEditformdata({\n            ...editformData,\n            error: responseData.error,\n          });\n        }, 2000);\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  return (\n    <Fragment>\n      {/* Black Overlay */}\n      <div\n        onClick={(e) =>\n          dispatch({ type: \"editProductModalClose\", payload: false })\n        }\n        className={`${\n          data.editProductModal.modal ? \"\" : \"hidden\"\n        } fixed top-0 left-0 z-30 w-full h-full bg-black opacity-50`}\n      />\n      {/* End Black Overlay */}\n\n      {/* Modal Start */}\n      <div\n        className={`${\n          data.editProductModal.modal ? \"\" : \"hidden\"\n        } fixed inset-0 flex items-center z-30 justify-center overflow-auto`}\n      >\n        <div className=\"mt-32 md:mt-0 relative bg-white w-11/12 md:w-3/6 shadow-lg flex flex-col items-center space-y-4 px-4 py-4 md:px-8\">\n          <div className=\"flex items-center justify-between w-full pt-4\">\n            <span className=\"text-left font-semibold text-2xl tracking-wider\">\n              Edit Product\n            </span>\n            {/* Close Modal */}\n            <span\n              style={{ background: \"#303031\" }}\n              onClick={(e) =>\n                dispatch({ type: \"editProductModalClose\", payload: false })\n              }\n              className=\"cursor-pointer text-gray-100 py-2 px-2 rounded-full\"\n            >\n              <svg\n                className=\"w-6 h-6\"\n                fill=\"none\"\n                stroke=\"currentColor\"\n                viewBox=\"0 0 24 24\"\n                xmlns=\"http://www.w3.org/2000/svg\"\n              >\n                <path\n                  strokeLinecap=\"round\"\n                  strokeLinejoin=\"round\"\n                  strokeWidth={2}\n                  d=\"M6 18L18 6M6 6l12 12\"\n                />\n              </svg>\n            </span>\n          </div>\n          {editformData.error ? alert(editformData.error, \"red\") : \"\"}\n          {editformData.success ? alert(editformData.success, \"green\") : \"\"}\n          <form className=\"w-full\" onSubmit={(e) => submitForm(e)}>\n            <div className=\"flex space-x-1 py-4\">\n              <div className=\"w-1/2 flex flex-col space-y-1 space-x-1\">\n                <label htmlFor=\"name\">Product Name *</label>\n                <input\n                  value={editformData.pName}\n                  onChange={(e) =>\n                    setEditformdata({\n                      ...editformData,\n                      error: false,\n                      success: false,\n                      pName: e.target.value,\n                    })\n                  }\n                  className=\"px-4 py-2 border focus:outline-none\"\n                  type=\"text\"\n                />\n              </div>\n              <div className=\"w-1/2 flex flex-col space-y-1 space-x-1\">\n                <label htmlFor=\"price\">Product Price *</label>\n                <input\n                  value={editformData.pPrice}\n                  onChange={(e) =>\n                    setEditformdata({\n                      ...editformData,\n                      error: false,\n                      success: false,\n                      pPrice: e.target.value,\n                    })\n                  }\n                  type=\"number\"\n                  className=\"px-4 py-2 border focus:outline-none\"\n                  id=\"price\"\n                />\n              </div>\n            </div>\n            <div className=\"flex flex-col space-y-2\">\n              <label htmlFor=\"description\">Product Description *</label>\n              <textarea\n                value={editformData.pDescription}\n                onChange={(e) =>\n                  setEditformdata({\n                    ...editformData,\n                    error: false,\n                    success: false,\n                    pDescription: e.target.value,\n                  })\n                }\n                className=\"px-4 py-2 border focus:outline-none\"\n                name=\"description\"\n                id=\"description\"\n                cols={5}\n                rows={2}\n              />\n            </div>\n            {/* Most Important part for uploading multiple image */}\n            <div className=\"flex flex-col mt-4\">\n              <label htmlFor=\"image\">Product Images *</label>\n              {editformData.pImages ? (\n                <div className=\"flex space-x-1\">\n                  <img\n                    className=\"h-16 w-16 object-cover\"\n                    src={`${apiURL}/uploads/products/${editformData.pImages[0]}`}\n                    alt=\"productImage\"\n                  />\n                  <img\n                    className=\"h-16 w-16 object-cover\"\n                    src={`${apiURL}/uploads/products/${editformData.pImages[1]}`}\n                    alt=\"productImage\"\n                  />\n                </div>\n              ) : (\n                \"\"\n              )}\n              <span className=\"text-gray-600 text-xs\">Must need 2 images</span>\n              <input\n                onChange={(e) =>\n                  setEditformdata({\n                    ...editformData,\n                    error: false,\n                    success: false,\n                    pEditImages: [...e.target.files],\n                  })\n                }\n                type=\"file\"\n                accept=\".jpg, .jpeg, .png\"\n                className=\"px-4 py-2 border focus:outline-none\"\n                id=\"image\"\n                multiple\n              />\n            </div>\n            {/* Most Important part for uploading multiple image */}\n            <div className=\"flex space-x-1 py-4\">\n              <div className=\"w-1/2 flex flex-col space-y-1\">\n                <label htmlFor=\"status\">Product Status *</label>\n                <select\n                  value={editformData.pStatus}\n                  onChange={(e) =>\n                    setEditformdata({\n                      ...editformData,\n                      error: false,\n                      success: false,\n                      pStatus: e.target.value,\n                    })\n                  }\n                  name=\"status\"\n                  className=\"px-4 py-2 border focus:outline-none\"\n                  id=\"status\"\n                >\n                  <option name=\"status\" value=\"Active\">\n                    Active\n                  </option>\n                  <option name=\"status\" value=\"Disabled\">\n                    Disabled\n                  </option>\n                </select>\n              </div>\n              <div className=\"w-1/2 flex flex-col space-y-1\">\n                <label htmlFor=\"status\">Product Category *</label>\n                <select\n                  onChange={(e) =>\n                    setEditformdata({\n                      ...editformData,\n                      error: false,\n                      success: false,\n                      pCategory: e.target.value,\n                    })\n                  }\n                  name=\"status\"\n                  className=\"px-4 py-2 border focus:outline-none\"\n                  id=\"status\"\n                >\n                  <option disabled value=\"\">\n                    Select a category\n                  </option>\n                  {categories && categories.length > 0\n                    ? categories.map((elem) => {\n                        return (\n                          <Fragment key={elem._id}>\n                            {editformData.pCategory._id &&\n                            editformData.pCategory._id === elem._id ? (\n                              <option\n                                name=\"status\"\n                                value={elem._id}\n                                key={elem._id}\n                                selected\n                              >\n                                {elem.cName}\n                              </option>\n                            ) : (\n                              <option\n                                name=\"status\"\n                                value={elem._id}\n                                key={elem._id}\n                              >\n                                {elem.cName}\n                              </option>\n                            )}\n                          </Fragment>\n                        );\n                      })\n                    : \"\"}\n                </select>\n              </div>\n            </div>\n            <div className=\"flex space-x-1 py-4\">\n              <div className=\"w-1/2 flex flex-col space-y-1\">\n                <label htmlFor=\"quantity\">Product in Stock *</label>\n                <input\n                  value={editformData.pQuantity}\n                  onChange={(e) =>\n                    setEditformdata({\n                      ...editformData,\n                      error: false,\n                      success: false,\n                      pQuantity: e.target.value,\n                    })\n                  }\n                  type=\"number\"\n                  className=\"px-4 py-2 border focus:outline-none\"\n                  id=\"quantity\"\n                />\n              </div>\n              <div className=\"w-1/2 flex flex-col space-y-1\">\n                <label htmlFor=\"offer\">Product Offfer (%) *</label>\n                <input\n                  value={editformData.pOffer}\n                  onChange={(e) =>\n                    setEditformdata({\n                      ...editformData,\n                      error: false,\n                      success: false,\n                      pOffer: e.target.value,\n                    })\n                  }\n                  type=\"number\"\n                  className=\"px-4 py-2 border focus:outline-none\"\n                  id=\"offer\"\n                />\n              </div>\n            </div>\n            <div className=\"flex flex-col space-y-1 w-full pb-4 md:pb-6 mt-4\">\n              <button\n                style={{ background: \"#303031\" }}\n                type=\"submit\"\n                className=\"rounded-full bg-gray-800 text-gray-100 text-lg font-medium py-2\"\n              >\n                Update product\n              </button>\n            </div>\n          </form>\n        </div>\n      </div>\n    </Fragment>\n  );\n};\n\nexport default EditProductModal;\n"]},"metadata":{},"sourceType":"module"}